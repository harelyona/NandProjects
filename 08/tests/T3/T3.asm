@256
D=A
@SP
M=D
@300
D=A
@LCL
M=D
@400
D=A
@ARG
M=D
// call function Sys.init 0
@$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
($ret.1)
// write function Main.T3 0
(Main.T3)
// call function Main.t1 0
@Main.T3$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t1
0;JMP
(Main.T3$ret.2)
// call function Main.t2 0
@Main.T3$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t2
0;JMP
(Main.T3$ret.3)
// call function Main.t3 0
@Main.T3$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t3
0;JMP
(Main.T3$ret.4)
// call function Main.t4 0
@Main.T3$ret.5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.t4
0;JMP
(Main.T3$ret.5)
// write label WHILE
(Main.T3$WHILE)
// write goto WHILE
@Main.T3$WHILE
0;JMP
// write return
@LCL
D=M
@frame
M=D
@frame
D=M
@5
A=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M
@1
A=D-A
D=M
@THAT
M=D
@frame
D=M
@2
A=D-A
D=M
@THIS
M=D
@frame
D=M
@3
A=D-A
D=M
@ARG
M=D
@frame
D=M
@4
A=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP
// write function Main.t1 0
(Main.t1)
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
A=M-1
D=M

@y_POSITIVE3
D;JGT
@y_NEGATIVE3
D;JLT
@NORMAL_CASE3
0;JMP
(y_POSITIVE3)
@SP
A=M-1
A=A-1
D=M
@NEGATIVE_POSITIVE3
D;JLT
@NORMAL_CASE3
0;JMP
(NEGATIVE_POSITIVE3)
@SP
M=M-1
A=M-1
M=-1
@CONTINUE3
0;JMP
(y_NEGATIVE3)
@SP
A=M-1
A=A-1
D=M
@POSITIVE_NEGATIVE3
D;JGT
@NORMAL_CASE3
0;JMP
(POSITIVE_NEGATIVE3)
@SP
M=M-1
@SP
A=M-1
M=0
@CONTINUE3
0;JMP
(NORMAL_CASE3)
@SP
AM=M-1
D=M
A=A-1
D=M-D
@TRUE3
D;JLT
@SP
A=M-1
M=0
@CONTINUE3
0;JMP
(TRUE3)
@SP
A=M-1
M=-1
(CONTINUE3)
// write return
@LCL
D=M
@frame
M=D
@frame
D=M
@5
A=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M
@1
A=D-A
D=M
@THAT
M=D
@frame
D=M
@2
A=D-A
D=M
@THIS
M=D
@frame
D=M
@3
A=D-A
D=M
@ARG
M=D
@frame
D=M
@4
A=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP
// write function Main.t2 0
(Main.t2)
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//gt
@SP
A=M-1
D=M

@y_POSITIVE6
D;JGT
@y_NEGATIVE6
D;JLT
@NORMAL_CASE6
0;JMP
(y_POSITIVE6)
@SP
A=M-1
A=A-1
D=M
@NEGATIVE_POSITIVE6
D;JLT
@NORMAL_CASE6
0;JMP
(NEGATIVE_POSITIVE6)
@SP
M=M-1
A=M-1
M=0
@CONTINUE6
0;JMP
(y_NEGATIVE6)
@SP
A=M-1
A=A-1
D=M
@POSITIVE_NEGATIVE6
D;JGT
@NORMAL_CASE6
0;JMP
(POSITIVE_NEGATIVE6)
@SP
M=M-1
@SP
A=M-1
M=-1
@CONTINUE6
0;JMP
(NORMAL_CASE6)
@SP
AM=M-1
D=M
A=A-1
D=M-D
@TRUE6
D;JGT
@SP
A=M-1
M=0
@CONTINUE6
0;JMP
(TRUE6)
@SP
A=M-1
M=-1
(CONTINUE6)
// write return
@LCL
D=M
@frame
M=D
@frame
D=M
@5
A=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M
@1
A=D-A
D=M
@THAT
M=D
@frame
D=M
@2
A=D-A
D=M
@THIS
M=D
@frame
D=M
@3
A=D-A
D=M
@ARG
M=D
@frame
D=M
@4
A=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP
// write function Main.t3 0
(Main.t3)
//push constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//push constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
//gt
@SP
A=M-1
D=M

@y_POSITIVE9
D;JGT
@y_NEGATIVE9
D;JLT
@NORMAL_CASE9
0;JMP
(y_POSITIVE9)
@SP
A=M-1
A=A-1
D=M
@NEGATIVE_POSITIVE9
D;JLT
@NORMAL_CASE9
0;JMP
(NEGATIVE_POSITIVE9)
@SP
M=M-1
A=M-1
M=0
@CONTINUE9
0;JMP
(y_NEGATIVE9)
@SP
A=M-1
A=A-1
D=M
@POSITIVE_NEGATIVE9
D;JGT
@NORMAL_CASE9
0;JMP
(POSITIVE_NEGATIVE9)
@SP
M=M-1
@SP
A=M-1
M=-1
@CONTINUE9
0;JMP
(NORMAL_CASE9)
@SP
AM=M-1
D=M
A=A-1
D=M-D
@TRUE9
D;JGT
@SP
A=M-1
M=0
@CONTINUE9
0;JMP
(TRUE9)
@SP
A=M-1
M=-1
(CONTINUE9)
// write return
@LCL
D=M
@frame
M=D
@frame
D=M
@5
A=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M
@1
A=D-A
D=M
@THAT
M=D
@frame
D=M
@2
A=D-A
D=M
@THIS
M=D
@frame
D=M
@3
A=D-A
D=M
@ARG
M=D
@frame
D=M
@4
A=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP
// write function Main.t4 0
(Main.t4)
//push constant 20000
@20000
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 30000
@30000
D=A
@SP
A=M
M=D
@SP
M=M+1
//neg
@SP
A=M-1
M=-M
//push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//gt
@SP
A=M-1
D=M

@y_POSITIVE12
D;JGT
@y_NEGATIVE12
D;JLT
@NORMAL_CASE12
0;JMP
(y_POSITIVE12)
@SP
A=M-1
A=A-1
D=M
@NEGATIVE_POSITIVE12
D;JLT
@NORMAL_CASE12
0;JMP
(NEGATIVE_POSITIVE12)
@SP
M=M-1
A=M-1
M=0
@CONTINUE12
0;JMP
(y_NEGATIVE12)
@SP
A=M-1
A=A-1
D=M
@POSITIVE_NEGATIVE12
D;JGT
@NORMAL_CASE12
0;JMP
(POSITIVE_NEGATIVE12)
@SP
M=M-1
@SP
A=M-1
M=-1
@CONTINUE12
0;JMP
(NORMAL_CASE12)
@SP
AM=M-1
D=M
A=A-1
D=M-D
@TRUE12
D;JGT
@SP
A=M-1
M=0
@CONTINUE12
0;JMP
(TRUE12)
@SP
A=M-1
M=-1
(CONTINUE12)
// write return
@LCL
D=M
@frame
M=D
@frame
D=M
@5
A=D-A
D=M
@R13
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@frame
D=M
@1
A=D-A
D=M
@THAT
M=D
@frame
D=M
@2
A=D-A
D=M
@THIS
M=D
@frame
D=M
@3
A=D-A
D=M
@ARG
M=D
@frame
D=M
@4
A=D-A
D=M
@LCL
M=D
@R13
A=M
0;JMP
// write function Sys.init 0
(Sys.init)
// call function Main.T3 0
@Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.T3
0;JMP
(Sys.init$ret.1)
// write label WHILE
(Sys.init$WHILE)
// write goto WHILE
@Sys.init$WHILE
0;JMP
